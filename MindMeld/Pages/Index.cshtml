@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
<div class="fixed top-20 right-20 z-20">
    <button data-on-click="$showSoundMenu = !$showSoundMenu"
            class="bg-transparent border-4 border-[#00ffaa] px-6 py-3 text-xs hover:bg-[#00ffaa] hover:text-black transition">
        🔊 SOUND
    </button>
</div>
<div class="fixed top-4 right-4 z-10">
    <div class="flex items-center space-x-4">
        <input type="text"
               data-bind-player-name
               placeholder="Enter Your Name"
               class="bg-black text-[#00ffaa] border-2 border-[#00ffaa] px-3 py-1 text-xl" />
    </div>
</div>
<div class="text-center space-y-6" id="home-screen">
    <div class="text-[#00ffaa]" data-show="$playerName!=''">Welcome</div>
    <div class="text-[#00ffaa]" data-text="$playerName.toUpperCase()"></div>
    <h1 class="text-4xl">MIND MELD</h1>
    <button data-attr-disabled="$playerName==''"
            data-class-opacity-50="$playerName==''"
            data-class-cursor-not-allowed="$playerName==''"
            data-class-hover:bg-[#00ddaa]="$playerName!=''"
            data-on-click="@@post('/api/new-room')"
            class="inline-block bg-[#00ffaa] text-black border-4 border-black px-6 py-3 text-xs transition">
        START GAME
    </button>
    <button data-on-click="$showModal = true" class="bg-transparent border-4 border-[#00ffaa] px-6 py-3 text-xs hover:bg-[#00ffaa] hover:text-black transition">
        HOW TO PLAY
    </button>
</div>
<div data-show="$playerName==''" class="mt-3 text-center text-red-400 text-xs">Please Enter Your Name</div>
<!-- Sound Control Modal -->
<div data-show="$showSoundMenu" data-signals-show-sound-menu="false" class="fixed inset-0 bg-black bg-opacity-80 flex items-center justify-center z-50">
    <div class="bg-black border-4 border-[#00ffaa] max-w-md p-6 m-4">
        <!-- Modal Header -->
        <div class="flex justify-between items-center mb-6">
            <h2 class="text-xl text-[#00ffaa] font-bold">SOUND SETTINGS</h2>
            <button data-on-click="$showSoundMenu = false" class="text-[#00ffaa] hover:text-red-400 text-2xl font-bold">×</button>
        </div>

        <!-- Sound Controls -->
        <div class="space-y-4">
            <!-- Music Toggle -->
            <div class="flex items-center justify-between text-[#00ffaa] text-sm">
                <span>Music</span>
                <button data-on-click="toggleMusic()"
                        class="px-3 py-1 border border-[#00ffaa] text-xs hover:bg-[#00ffaa] hover:text-black transition"
                        id="music-toggle">
                    ON
                </button>
            </div>

            <!-- SFX Toggle -->
            <div class="flex items-center justify-between text-[#00ffaa] text-sm">
                <span>Sound Effects</span>
                <button data-on-click="toggleSFX()"
                        class="px-3 py-1 border border-[#00ffaa] text-xs hover:bg-[#00ffaa] hover:text-black transition"
                        id="sfx-toggle">
                    ON
                </button>
            </div>

            <!-- Master Volume -->
            <div class="mb-3">
                <label class="block text-[#00ffaa] text-xs mb-1">Master Volume</label>
                <input type="range" min="0" max="100" value="70"
                       class="w-full"
                       data-on-input="setMasterVolume(this.value / 100)"
                       style="accent-color: #00ffaa;"
                       id="master-volume">
            </div>

            <!-- Music Volume -->
            <div class="mb-3">
                <label class="block text-[#00ffaa] text-xs mb-1">Music Volume</label>
                <input type="range" min="0" max="100" value="50"
                       class="w-full"
                       data-on-input="setMusicVolume(this.value / 100)"
                       style="accent-color: #00ffaa;"
                       id="music-volume">
            </div>

            <!-- SFX Volume -->
            <div class="mb-4">
                <label class="block text-[#00ffaa] text-xs mb-1">SFX Volume</label>
                <input type="range" min="0" max="100" value="80"
                       class="w-full"
                       data-on-input="setSFXVolume(this.value / 100)"
                       style="accent-color: #00ffaa;"
                       id="sfx-volume">
            </div>

            <!-- Test Buttons -->
            <div class="grid grid-cols-2 gap-2 text-xs">
                <button data-on-click="playClickSound()"
                        class="px-2 py-1 border border-[#00ffaa] hover:bg-[#00ffaa] hover:text-black transition">
                    Test Click
                </button>
                <button data-on-click="playSuccessSound()"
                        class="px-2 py-1 border border-[#00ffaa] hover:bg-[#00ffaa] hover:text-black transition">
                    Test Success
                </button>
            </div>
        </div>

        <!-- Modal Footer -->
        <div class="mt-6 text-center">
            <button data-on-click="$showSoundMenu = false"
                    class="bg-[#00ffaa] text-black border-4 border-black px-6 py-2 text-xs hover:bg-[#00ddaa] transition">
                CLOSE
            </button>
        </div>
    </div>
</div>
<!-- How to Play Modal -->
<div data-show="$showModal" data-signals-show-modal="false" class="fixed inset-0 bg-black bg-opacity-80 flex items-center justify-center z-50">
    <div class="bg-black border-4 border-[#00ffaa] max-w-2xl max-h-[90vh] overflow-y-auto p-8 m-4">
        <!-- Modal Header -->
        <div class="flex justify-between items-center mb-6">
            <h2 class="text-2xl text-[#00ffaa] font-bold">HOW TO PLAY MIND MELD</h2>
            <button data-on-click="$showModal = false" class="text-[#00ffaa] hover:text-red-400 text-2xl font-bold">×</button>
        </div>

        <!-- Game Steps -->
        <div class="space-y-6 text-left">
            <!-- Step 1 -->
            <div class="border-l-4 border-[#00ffaa] pl-4">
                <h3 class="text-lg text-[#00ddaa] font-bold mb-2">1. THE GOAL</h3>
                <p class="text-[#00ffaa] text-sm leading-relaxed">
                    Work together with your teammates to think of the <span class="text-yellow-400 font-bold">exact same word</span> at the same time.
                    The goal is to achieve a "mind meld" - when everyone submits the identical word!
                </p>
            </div>

            <!-- Step 2 -->
            <div class="border-l-4 border-[#00ffaa] pl-4">
                <h3 class="text-lg text-[#00ddaa] font-bold mb-2">2. GAME SETUP</h3>
                <p class="text-[#00ffaa] text-sm leading-relaxed">
                    • Join a room with your friends (2+ players)<br>
                    • The room host starts the game when everyone is ready<br>
                    • You have multiple rounds to achieve the mind meld
                </p>
            </div>

            <!-- Step 3 -->
            <div class="border-l-4 border-[#00ffaa] pl-4">
                <h3 class="text-lg text-[#00ddaa] font-bold mb-2">3. EACH ROUND</h3>
                <p class="text-[#00ffaa] text-sm leading-relaxed">
                    • You have <span class="text-yellow-400 font-bold">15 seconds</span> to think of a word<br>
                    • Type your word and submit it before time runs out<br>
                    • All words are revealed simultaneously after submission<br>
                    • If everyone chose the same word - <span class="text-green-400 font-bold">YOU WIN!</span>
                </p>
            </div>

            <!-- Step 4 -->
            <div class="border-l-4 border-[#00ffaa] pl-4">
                <h3 class="text-lg text-[#00ddaa] font-bold mb-2">4. STRATEGY TIPS</h3>
                <p class="text-[#00ffaa] text-sm leading-relaxed">
                    • Think simple and obvious words<br>
                    • Consider what your teammates might think<br>
                    • Use previous round results as clues<br>
                    • Common categories: colors, animals, food, objects
                </p>
            </div>

            <!-- Step 5 -->
            <div class="border-l-4 border-[#00ffaa] pl-4">
                <h3 class="text-lg text-[#00ddaa] font-bold mb-2">5. WINNING & LOSING</h3>
                <p class="text-[#00ffaa] text-sm leading-relaxed">
                    • <span class="text-green-400 font-bold">WIN:</span> All players submit the exact same word<br>
                    • <span class="text-red-400 font-bold">CONTINUE:</span> Different words were submitted, try next round<br>
                    • <span class="text-orange-400 font-bold">GAME OVER:</span> Maximum rounds reached without success
                </p>
            </div>
        </div>

        <!-- Modal Footer -->
        <div class="mt-8 text-center">
            <button data-on-click="$showModal = false"
                    class="bg-[#00ffaa] text-black border-4 border-black px-6 py-3 text-xs hover:bg-[#00ddaa] transition">
                GOT IT!
            </button>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        // Initialize sound settings when page loads
        document.addEventListener('DOMContentLoaded', function() {
            // Start background music when page loads
            if (soundManager.musicEnabled) {
                startBackgroundMusic();
            }
            
            // Update the sound control buttons to reflect current settings
            updateSoundControls();

            // Add click sounds to existing buttons
            const buttons = document.querySelectorAll('button');
            buttons.forEach(button => {
                button.addEventListener('click', function() {
                    playClickSound();
                });
            });
        });

        // Sound control functions
        function toggleMusic() {
            soundManager.toggleMusic();
            updateSoundControls();
        }

        function toggleSFX() {
            soundManager.toggleSFX();
            updateSoundControls();
        }

        function setMasterVolume(volume) {
            soundManager.setMasterVolume(volume);
        }

        function setMusicVolume(volume) {
            soundManager.setMusicVolume(volume);
        }

        function setSFXVolume(volume) {
            soundManager.setSFXVolume(volume);
        }

        function updateSoundControls() {
            const musicToggle = document.getElementById('music-toggle');
            const sfxToggle = document.getElementById('sfx-toggle');
            const masterVolume = document.getElementById('master-volume');
            const musicVolume = document.getElementById('music-volume');
            const sfxVolume = document.getElementById('sfx-volume');
            
            if (musicToggle) {
                musicToggle.textContent = soundManager.musicEnabled ? 'ON' : 'OFF';
            }
            
            if (sfxToggle) {
                sfxToggle.textContent = soundManager.sfxEnabled ? 'ON' : 'OFF';
            }

            if (masterVolume) {
                masterVolume.value = soundManager.masterVolume * 100;
            }

            if (musicVolume) {
                musicVolume.value = soundManager.musicVolume * 100;
            }

            if (sfxVolume) {
                sfxVolume.value = soundManager.sfxVolume * 100;
            }
        }
    </script>
}

