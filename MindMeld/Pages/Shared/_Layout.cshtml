<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - MindMeld</title>
    <script type="module" src="https://cdn.jsdelivr.net/gh/starfederation/datastar@main/bundles/datastar.js"></script>
    <script type="importmap"></script>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/MindMeld.styles.css" asp-append-version="true" />
    <link href="https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap" rel="stylesheet" />
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
    </style>
</head>
<body>
    <header>
    </header>
    <div class="">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>
    <!-- Sound Control Modal -->
    <div data-show="$showSoundMenu" data-signals-show-sound-menu="false" class="fixed inset-0 bg-black bg-opacity-80 flex items-center justify-center z-50">
        <div class="bg-black border-4 border-[#00ffaa] max-w-md p-6 m-4">
            <!-- Modal Header -->
            <div class="flex justify-between items-center mb-6">
                <h2 class="text-xl text-[#00ffaa] font-bold">SOUND SETTINGS</h2>
                <button data-on-click="$showSoundMenu = false" class="text-[#00ffaa] hover:text-red-400 text-2xl font-bold">×</button>
            </div>

            <!-- Sound Controls -->
            <div class="space-y-4">
                <!-- Music Toggle -->
                <div class="flex items-center justify-between text-[#00ffaa] text-sm">
                    <span>Music</span>
                    <button data-on-click="toggleMusic()"
                            class="px-3 py-1 border border-[#00ffaa] text-xs hover:bg-[#00ffaa] hover:text-black transition"
                            id="music-toggle">
                        ON
                    </button>
                </div>

                <!-- SFX Toggle -->
                <div class="flex items-center justify-between text-[#00ffaa] text-sm">
                    <span>Sound Effects</span>
                    <button data-on-click="toggleSFX()"
                            class="px-3 py-1 border border-[#00ffaa] text-xs hover:bg-[#00ffaa] hover:text-black transition"
                            id="sfx-toggle">
                        ON
                    </button>
                </div>

                @* <!-- Master Volume -->
            <div class="mb-3">
                <label class="block text-[#00ffaa] text-xs mb-1">Master Volume</label>
                <input type="range" min="0" max="100" value="70"
                       class="w-full"
                       data-on-input="setMasterVolume(this.value / 100)"
                       style="accent-color: #00ffaa;"
                       id="master-volume">
            </div>

            <!-- Music Volume -->
            <div class="mb-3">
                <label class="block text-[#00ffaa] text-xs mb-1">Music Volume</label>
                <input type="range" min="0" max="100" value="50"
                       class="w-full"
                       data-on-input="setMusicVolume(this.value / 100)"
                       style="accent-color: #00ffaa;"
                       id="music-volume">
            </div>

            <!-- SFX Volume -->
            <div class="mb-4">
                <label class="block text-[#00ffaa] text-xs mb-1">SFX Volume</label>
                <input type="range" min="0" max="100" value="80"
                       class="w-full"
                       data-on-input="setSFXVolume(this.value / 100)"
                       style="accent-color: #00ffaa;"
                       id="sfx-volume">
            </div>

            <!-- Test Buttons -->
            <div class="grid grid-cols-2 gap-2 text-xs">
                <button data-on-click="playClickSound()"
                        class="px-2 py-1 border border-[#00ffaa] hover:bg-[#00ffaa] hover:text-black transition">
                    Test Click
                </button>
                <button data-on-click="playSuccessSound()"
                        class="px-2 py-1 border border-[#00ffaa] hover:bg-[#00ffaa] hover:text-black transition">
                    Test Success
                </button>
            </div> *@
            </div>

            <!-- Modal Footer -->
            <div class="mt-6 text-center">
                <button data-on-click="$showSoundMenu = false"
                        class="bg-[#00ffaa] text-black border-4 border-black px-6 py-2 text-xs hover:bg-[#00ddaa] transition">
                    CLOSE
                </button>
            </div>
        </div>
    </div>
    <!-- Sound Control Menu -->
    <div id="sound-control-container" data-signals-show-sound-menu="false"></div>
    
    <footer class="border-top footer text-muted">
        <div class="">
            &copy; 2025 - MindMeld - <a asp-area="" asp-page="/Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <!-- Sound Management Scripts -->
    <script src="~/js/soundManager.js" asp-append-version="true"></script>
    <script src="~/js/soundControlMenu.js" asp-append-version="true"></script>
    <script>
        // Initialize sound settings when page loads
        document.addEventListener('DOMContentLoaded', function() {
            // Start background music when page loads
            if (soundManager.musicEnabled) {
                startBackgroundMusic();
            }

            // Update the sound control buttons to reflect current settings
            updateSoundControls();

            // Add click sounds to existing buttons
            const buttons = document.querySelectorAll('button');
            buttons.forEach(button => {
                button.addEventListener('click', function() {
                    playClickSound();
                });
            });
        });

        // Sound control functions
        function toggleMusic() {
            soundManager.toggleMusic();
            updateSoundControls();
        }

        function toggleSFX() {
            soundManager.toggleSFX();
            updateSoundControls();
        }

        function setMasterVolume(volume) {
            soundManager.setMasterVolume(volume);
        }

        function setMusicVolume(volume) {
            soundManager.setMusicVolume(volume);
        }

        function setSFXVolume(volume) {
            soundManager.setSFXVolume(volume);
        }

        function updateSoundControls() {
            const musicToggle = document.getElementById('music-toggle');
            const sfxToggle = document.getElementById('sfx-toggle');
            const masterVolume = document.getElementById('master-volume');
            const musicVolume = document.getElementById('music-volume');
            const sfxVolume = document.getElementById('sfx-volume');

            if (musicToggle) {
                musicToggle.textContent = soundManager.musicEnabled ? 'ON' : 'OFF';
            }

            if (sfxToggle) {
                sfxToggle.textContent = soundManager.sfxEnabled ? 'ON' : 'OFF';
            }

            if (masterVolume) {
                masterVolume.value = soundManager.masterVolume * 100;
            }

            if (musicVolume) {
                musicVolume.value = soundManager.musicVolume * 100;
            }

            if (sfxVolume) {
                sfxVolume.value = soundManager.sfxVolume * 100;
            }
        }
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>